# Crawling data from Yelp

import re
import util
import bs4
import queue
import json
import sys
import csv
import pandas as pd


def get_loc_cook():
    with open(r"c:\Users\35653\Desktop\CS122\project\cook_county_zips.csv") as cook_zips:
        reader = csv.reader(cook_zips)

        city_state = [(row[4], row[5]) for row in reader]
        del city_state[0]
        city_state = set(city_state)

    return city_state


def get_cities():
    city_state = get_loc_cook()
    cook_cities = []
    for ele in city_state:
        cook_cities.append(ele[0])

    #print(cook_cities)
    #print(len(cook_cities))

    url = 'https://www.rentcafe.com/sitemaps/us/il/average-rent-market-trends/'
    request = util.get_request(url)
    text = util.read_request(request)

    soup = bs4.BeautifulSoup(text, "html5lib")
    tags = soup.find_all('a', href=True, target="", role="")


    cities = []
    count = 0
    for tag in tags: 
        if "title" in tag.attrs: 
            city = tag['title']
            if city[0 : 15] == "Average Rent in":
                #print(city)
                city = city[16 :]
                #print(city)
                count += 1
                if city in cook_cities:
                    cities.append(city)

    #print(count)
    #print(len(cities))

    return cities

cities = get_cities()
#print(cities)



def get_restaurant_links_cook():
    cities = get_cities()

    city_state = get_loc_cook()
    new_city_state = []
    for ele in city_state:
        if ele[0] in cities:
            new_city_state.append(ele)

    page_suffix = [i for i in range(0, 231, 10)]
    #print(city_state)

    url_list = []
    for city, state in city_state:
        html = "https://www.yelp.com/search?find_desc=Restaurants&find_loc=" + city.replace(" ", "") + "%2C%20" + state
        for suffix in page_suffix:
            html_page = html + "&start=" + str(suffix)
            url_list.append(html_page)

    #for url in request_list:
    #    print(url)


    r'''
    with open(r"c:\Users\35653\Desktop\CS122\project\urls.txt", "w") as write_file:
        write_file.writelines(url_list)

        write_file.close()
    '''

    url_list = ["https://www.yelp.com/search?find_desc=Restaurants&find_loc=Lyons%2C%20IL&start=190"]
    for url in url_list:
        request = util.get_request(url)
        if request:

            text = util.read_request(request)

            soup = bs4.BeautifulSoup(text, "html5lib")
            tags = soup.find_all('a', href=True, target="", role="")

            # extract href links to restaurants
            links = []
            for tag in tags:  
                link = tag['href']
                link = util.convert_if_relative_url(url, link)
                link = util.remove_fragment(link)
                # Hardcoded filter
                if link[-11:] == "Restaurants":
                    if tag["name"] != '':
                        if link not in links:
                            links.append(link + "\n")
    '''
    with open(r"c:\Users\35653\Desktop\CS122\project\links.txt", "w") as write_file:
        write_file.writelines(links)

        write_file.close()
    '''

get_restaurant_links()


def get_rental_links():
    
    return None


    '''

    #print(len(links))

    #https://www.yelp.com/search?find_desc=Restaurants&find_loc=Blue%20Island%2C%20IL
    #https://www.yelp.com/search?find_desc=Restaurants&find_loc=Blue%20Island%2C%20IL&start=10
    #https://www.yelp.com/search?find_desc=Restaurants&find_loc=Blue%20Island%2C%20IL&start=20

    #https://www.yelp.com/search?find_desc=&find_loc=Adel%2C%20GA
'''


def get_restaurant_links_chicago():
    # start from searching "Restaurant", "Chicago" from yelp main page
    url = 'https://www.yelp.com/search?find_desc=Restaurants&find_loc=Chicago%2C%20IL&start=0'
    request = util.get_request(url)
    text = util.read_request(request)

    soup = bs4.BeautifulSoup(text, "html5lib")
    tags = soup.find_all('a', href=True, target="", role="")

    # extract href links to restaurants
    links = []
    for tag in tags:  
        link = tag['href']
        link = util.convert_if_relative_url(url, link)
        link = util.remove_fragment(link)
        # Hardcoded filter
        if link[-11:] == "Restaurants":
            if tag["name"] != '':
                if link not in links:
                    links.append(link)

    for link in links:
        print(link)
    '''


##### REFERENCE #####
'''
# All links
<a class=" link__09f24__1MGLa photo-box-link__09f24__28L0f link-color--blue-dark__09f24__tK18E link-size--default__09f24__QvrjA" href="/biz/boxcar-bettys-chicago-2?osq=Restaurants" target="" name="" rel="">
<a class=" link__09f24__1MGLa link-color--inherit__09f24__3Cplm link-size--default__09f24__QvrjA" href="/search?cflt=sandwiches&amp;find_desc=Restaurants&amp;find_loc=Chicago%2C+IL" target="" name="" rel="" role="link">

# Repeated links
'https://www.yelp.com/biz/the-delta-chicago?osq=Restaurants'
'https://www.yelp.com/biz/the-delta-chicago?hrid=qtOXI4YDVJNFHs4GvZqGuA&osq=Restaurants'

<a class=" link__09f24__1MGLa link-color--inherit__09f24__3Cplm link-size--inherit__09f24__3Javq" href="/biz/penumbra-chicago?osq=Restaurants" target="" name="Penumbra" rel="">
<a class=" link__09f24__1MGLa link-color--blue-dark__09f24__tK18E link-size--inherit__09f24__3Javq" href="/biz/penumbra-chicago?hrid=_DHfzbvVXSfBoHjJHAx8kg&amp;osq=Restaurants" target="" name="" rel="">
'''
